@model DMUViews.Models.Movie

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Create</h2>

<link href="~/AdminStyleSheet/js/Chosen/chosen.min.css" rel="stylesheet" />

@using (Html.BeginForm("Create", "Admin", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.HiddenFor(model => model.MovieId)
    <h4>Movie</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.MovieTitle, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MovieTitle, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MovieTitle, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="file" id="file" style="width: 100%;" />

            @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label>Select Genre</label>
        <div class="col-md-10">
            @*@Html.DropDownListFor(model => model.MovieId, new SelectList(Model.Genres, "GenreID", "GenreName"), new { @class = "form-control form-control-sm", id = "normalDropDown" })*@
            @*@Html.ListBoxFor(model => model.SelectedIDArray, new MultiSelectList(Model.Genres, "GenreId", "GenreName"), new { @class = "form-control", id = "multiSelectDropDown", multiple = "multiple" })*@

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Writer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Writer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Writer, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DateReleased, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateReleased, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DateReleased, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script>
        $(function () {
            //normal dropdown
            $("#normalDropDown").chosen();

            //multiselect DropDown
            //$("#multiSelectDropDown").chosen();
        });
    </script>
    <script src="~/AdminStyleSheet/js/chosen.jquery.min.js"></script>

    @Scripts.Render("~/bundles/jqueryval")
}
